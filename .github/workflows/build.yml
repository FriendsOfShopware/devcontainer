name: Build
on:
  schedule:
    - cron: '5 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - Dockerfile.php

env:
  DOCKER_BUILDKIT: 1

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  base-slim:
    name: "Build Base Slim"
    runs-on: shopware-arm64
    container: ghcr.io/catthehacker/ubuntu:act-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push
        run: docker buildx bake base-slim --push

  base-full:
    name: "Build Base Full"
    runs-on: shopware-arm64
    container: ghcr.io/catthehacker/ubuntu:act-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push
        run: docker buildx bake base-full --push

  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.generate-matrix.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Matrix
        id: generate-matrix
        run: |
          MATRIX=$(node matrix.mjs)
          echo "matrix<<EOF" >> $GITHUB_OUTPUT
          echo "$MATRIX" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

  build-flex:
    runs-on: shopware-arm64
    container: ghcr.io/catthehacker/ubuntu:act-22.04
    needs:
      - base-full
      - generate-matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/shopware/devcontainer/flex:${{ matrix.tag }}-${{ matrix.phpVersion }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
          build-args: |
            PHP_VERSION=${{ matrix.phpVersion }}
            SHOPWARE_VERSION=${{ matrix.swVersion }}
          push: true
          provenance: false

  build-dev:
    runs-on: shopware-arm64
    container: ghcr.io/catthehacker/ubuntu:act-22.04
    needs:
      - base-full
      - generate-matrix
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login into Github Docker Registery
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/shopware/devcontainer/dev:${{ matrix.tag }}-${{ matrix.phpVersion }}
          platforms: linux/amd64,linux/arm64
          file: Dockerfile.dev
          build-args: |
            PHP_VERSION=${{ matrix.phpVersion }}
            SHOPWARE_VERSION=${{ matrix.swVersion }}
          push: true
          provenance: false
